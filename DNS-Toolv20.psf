<File version="2">
  <FileID>89a4fe71-a48e-41a5-8f50-927ab5535dd5</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAHZySURBVHhe7f0HfBzZdSZ8a72737uvoyTb+4Xd
d9cbbEm2kiWNvI6y8kijNCNbsjRZM5ycNENymHMAcwAJkGAAAUaAEQBBECBB5Jwz0Gh0Rg5EjiSf
757qbhIkGyg02WCBwPOf35lO1beqi42+p27de+sTRERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERGSAefPeXLt7b0jCpq3BDAaDwWAw
HvPYuiM4YfW6TQmean5im7bszoAyeJPBYDAYDMbjHrdUnW6yd8JTzU9MsoUhtXTLdQaDwWAwGI97
dA8DxZW2qSUAkjH4KoTBYDAYDMaDR3sv0Nk/ccjrbT2+X/PGVJbp6Luzzu6hh0gAZEVtskIV7apQ
b8jz45djMBgMBoPhO6TObHANoLCqBcXVrfeFPF/v7Ie1eRhFkyxjcvTB3jIy6TI11m60drvX+8AJ
gBRgdfWg3toGs70TJkszauvtqG1ogr25//YKGAzGI4wu9bepEvLBW+5zfB3qfrN6zueyDAZjRkTX
AHA1qw5p+RYUVTejsHJcVDUju9iB5CwT0tXrKblmlNa2obSu43YUqco9t9SFK5l1yCiyqbJMKKtr
Q0ltOwpUGaXqVhKAvPJGxCWXq3Xe0tb7wAlAc9ctVNTa4OoZRVlZIarin4MlayEKon+MwpwraFcf
yLssg8F4NNHWBzjtLhzcfwR79p9CsWUY19Xf4vVBdzIgy0gToDQFSnOh/PB0qscd6rHcv7c8BoMx
/SF/j6l5DXC0jmp/q+Ob7L1/l5mFNi2kFaC955Y60B6ExdUHZ6s8dv9dZ8gyRXaYXQPq9T71vltQ
1TZc7SOwNQ2gW5V9LaceTZ03tTIf/BRA9y2Ul1ajMrsAOVfPob3gXVXadjgufR2ZqXHoVCu6vSyD
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
u133rdP92Pc6dbZLlTfRvrhrnfcsM7V94X7szzq5/93rdK9n3DrvWWZq+8L92J91zq39717nRPvi
4fe/r3W63zfROufW/neXLe9vbZORck1andujDqr99cAJgFxMoNLUhoysPFRUVuPsuRhcuZqCmJiL
uJSQpCIRMbHxSLpyDefOxyD5Wpq2zNXkVFyIicPlxCu4GH8ZcXGXkJiUjPMXYtUyqdoyciuP5Xl5
XZaT5eV9V5NTVHmxuJaShnPaOq+pZeMQFX0ONTU1KC8vVzujASUlJbBardqtPC4rK1MJRZ1KGKpR
UVGhEpR6lJaW3l7GYrFoj00mE6qqqrSQ+/I+ec1bnixjNpu1MmR9tbW1E65TnpfX5fMcPXZK+zze
fXDm7AXts8jnvHz5CuIuJiBWfdbLiVe1z3dnmVRt/8l7ZX/KvkhQ+1c+s+zvs+cu3N5vsq9lH8m+
j7+k9r/6t/CuU5aR8uQ9ss6E2+uMR6LPdar9r56X12U5WV7eJ++XZcavU9Yj65P1yvrlOe86Zfvc
64zTtvtifIL2OWS75HPdu075/LIfZJ2yX2Sdsp+8y0i57n1xUdsX2jq1fSHrvLNd8liel9dlOVne
1/6Xdd7ZF4Hf/0lXHmT/u7druvZ/7Azb/9P5/Z8N+9+7TllGyjV6/8vvu3e7pmf/u/fFVPf/BW3/
e/bFNH3/pRxZRsqdyv7Xtmua9v/4739U9BmUlFagoqoW+QUlnmp96h4qASirbYHD0aQynCYUFxeh
o6MdLpdTZScqa2lpVvddaG9vU8vY0dXZCbvdjs4OyVicaG1VGU1TExobG9HW1ganw6EN7dOWUbfy
WJ6X12U5WV7eJ++XZaQ8KVeGFzY2ulTG1aQeO7SKV94jFXxzc7N2K6/J8/K6vFcqdNk2qcjHLyOP
5XmpxGUCIFmfPCevecuTx1K+lCFledc5fpl71ynlyDZ698Vdn9OpPqf6bLJ8U5Psi1btPeOXkcfy
XilD9nVra4tWZodnX3R698Uk+1+WkWXlPd79L+v07n9f6/Tuf1nOu//vXWe72v+yHlmfrFfWL9vh
e50t2vbf2Re+1inb5V6n7BfZP3cvI+tU26XWKftaW6e2Xe13bZe2L9Tz8rosJ8tPtP+9+2J69v9E
+4L7X26n//v/+O//O+v0c/979sX9+9+9XVKe/v6X8u7Z/6pM775wTLDOqez/8b//vveFe/+P//2/
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
VvTHelwr6+kgowCkJcQXaQEoLy8zsgXAPQ/ARGNAvWpqarQrO8lykizM1ZDKTY5yfSUAMuGDdFqR
itDXe+dCSEuRJJQyJpiI/COVv974+ZmMlf795LTORPMASD1i6ERA3pkA9b50TADcwQRg8mACQPTg
ZFr28bPjPW68CQATgTsmmwlQWgCk1cfABMAJk6lO++GeTEASAIsVTpcLdpvV9+sNFjg8F1Swq4RE
EhPfy90f8kcjLRnexxbtsUULec2utlvKtVktd73P33j0CYAFNlWe97N5P0+D2f2ZreqxWd232d2f
z6k+p+W+MiYOi/o3sT7kPhkfTACIHpycL5bfGJo9JrsWgOEtAHIKwG63aZXHZB46AVAVjd1qQsqV
JOSVVGgtDvK8VFxOh7vCtDbUIzcjRVUeiSgsr7q9jF5I5Virtq/OZNYqP6n8zSqTrqmtQ329Scuq
S/IykZR0BZUmtU5VSfkqZyrxqBMAq/ps5WUVMJndyUy9Staqa2rVZ7SgrrYGtXXSZGhFRXEekhIv
IyUzFxabShh8lHVveMurqXEngL6W8TeYABA9OPkbkn5WNHtIUidXFvRFWgDkFIGBnQBdqgKo1u14
8nAJgAWNTXacPRCMlSvWYduuCNQ3tqKluQXl+emIvZwOV0sbaguS8NG7C3Dg4G4sX7kD1bYWNLrc
l2d0OpxaxepqbNS2QZ5rbFRHvE4XOtudiAwNQVxKiVrOpp634XxkOK4UVCMn6YIq7wg2rlqJjRtW
YdueKNibGv06Sh4fjzIBsNgccFRm4/3Xf4PT6bXovt6FopQLCA47i57BbvUZD+JEbDZ6Oq3YtmoJ
Nu0Owcqly3AxrRLtbU3u/ab2j2yPtLzIY9l30klR7re2tSMz4TRCwmPgam70uQ3+BhMAogcnY91l
Vj35O/J2uPb+zUqLn3Qmk9fkiFJuZXiZHCjJ37PWwqnuy3Pjl5H3yPPev3spU8q+dxkpX56X9emt
U/tNmWSd3u3SWiU96/S1XVK+rMe7Tlm/r3V694V3nZPtC+86J9oX49fp3Rfjy/Mu412n3r6Q9Uy0
L+Q3UeY8kOd8kQRA6gzDEgCZCEg2Xj7sZB42AWhSCcDx0M3YuG0fCkorcenkfixYsByL3n8dL763
Hg3NbSjLvIiF81ch9uIp7NiyH9HHD+KDDz7EqfgriA7bigWLViMuLhYblyzE1n0ROLQvGBvXB2Hr
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
ERERTQ+9BKCoyMBTANIHwG63weVyeYr0jQkAERGRf2Z0J0CZB8BkqoPFYvEU6ZskALdu3fI8IiIi
Ij16LQAVFeVGJgAONDSYYbfbPUX6Vl1bj5GRUS1jYTAYDAaDoR/1Zgt6eno9Nend5HXDJwKyWBp0
EwCL1Y4alQRISwCDwWAwGAydMDWgqsaE0dFRT016N2kBMHwq4Lq6WjQ0NHiKJCIioukmLQCpqSnG
dgJ0OOxobGz0FElERETTTVoASksNvBywdyIgvWGAREREFDiSAGRlZRqXAEx1IiAiIiIKHEkA8vJy
2QJAREQ0l0gCUFhYYHwfgLa2Nk+RRERE9CgYOhGQzd6I6qpKnDp1CuXl5dr5iMLCQhQUFKj7WSgr
K1MbmIaqqiqkpqaisrISGRkZKC4uRl5eHnJyclBaWor09HTtNe8y8liel9dlOVle3uddRsqTct3r
zNLWJ+uV9ctz49cp10vOzMzUpkzMz89Hdna2tl2yjvHbJY9LSkqQm5urrVPu+1qnvFfKkLJknVK2
rGP8Mt51yuvj1+lrX8h6ZH2yXrk/fl/IsvJ4/Drlc/ha5+Ox//Nm1P6XdXr3xVzZ/1LmTNr/sh7u
/8dr/8t2cf9PvP9lG6Zz/3vXmZSUpD03ODT86BOA0toWVFTW4MaNm+jt7UVfXx+6u7u1+xJyX567
fv06+vv7tdu+vv7by/T09GjR63lfn3cZdasto56/vczt8tzL3ClvKuu8s4yU1d3d41mm+84y3nWq
TGrydbrLlzJkcoaprVOW8bFOX/tCrV8rz7PM/escv10Tr3PiZbj/7yzzqPa/zjo977u9/73LqOfv
bJevfTHZOifaF+7y7tsudetehvuf+1+V51nm/nU+gv2vbrVl1PN3tsvXvrizzqnvC3d5922Xd52P
2f7v6rquVeTyWmFRmXbfHw+cALT3Ag2uPqRl5KCgqBTFJRUoKi5Hkfd2/P2JbrX73tuJlvW8Puky
ntspL+O9nWQZb0y0jN/b5b2dZBlvTLSMEfvCiHWOj4mW8Xu7vLeTLOONiZYxYl8Ysc7xMdEyfm+X
93aSZbwx0TJG7Asj1jk+JlrG7+3y3k6yjDcmWsaIfWHEOsfHRMv4vV3e20mW8cZEy/hYp9S7UvFn
ZOWhttbsqdan7oETgBaVeHT6np2QiIiIZriHSgDaezylEBER0WOFCQAREdEcxASAiIhoDmICQERE
NAcxASAiIpqDmAAQERHNQUwAiIiI5iAmAERERHPQ8OhDJABt3e4MgsFgMBgMxuMVvYNA84MmABKS
PTAYDAaDwXi8Qip/qcennABs2Rl6WZoO5A0MBoPBYDAe7xhRdXpVfYt+ArBk+Zo0k82B4gobg8Fg
MBiMxzwqTTYkpeTqJwBERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
REREREREREREREREREREREREREREFGif+MT/HyuUPQ0wxuerAAAAAElFTkSuQmCC</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="form1" children="Controls">
    <Property name="BackColor">Window</Property>
    <Property name="ClientSize">1097, 894</Property>
    <Property name="Name">form1</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">Form</Property>
    <Event name="Load">form1_Load</Event>
    <Object type="System.Windows.Forms.TabControl, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="tabcontrol1" children="Controls">
      <Property name="Location">0, 1</Property>
      <Property name="Name">tabcontrol1</Property>
      <Property name="SelectedIndex">0</Property>
      <Property name="Size">1068, 871</Property>
      <Property name="TabIndex">0</Property>
      <Object type="System.Windows.Forms.TabPage, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="tabpage1" children="Controls">
        <Property name="Location">4, 22</Property>
        <Property name="Name">tabpage1</Property>
        <Property name="Padding">3, 3, 3, 3</Property>
        <Property name="Size">1060, 845</Property>
        <Property name="TabIndex">0</Property>
        <Property name="Text">Zone Lookup</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Txt_DnsLookup" children="Controls">
          <Property name="Location">395, 19</Property>
          <Property name="Name">Txt_DnsLookup</Property>
          <Property name="Size">195, 20</Property>
          <Property name="TabIndex">31</Property>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Button_RecordLookup" children="Controls">
          <Property name="Location">304, 55</Property>
          <Property name="Name">Button_RecordLookup</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">32</Property>
          <Property name="Text">Record-Lookup</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">Button_RecordLookup_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelHostnameIP" children="Controls">
          <Property name="Location">304, 18</Property>
          <Property name="Name">labelHostnameIP</Property>
          <Property name="Size">125, 13</Property>
          <Property name="TabIndex">30</Property>
          <Property name="Text">Hostname / IP</Property>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="button_ClearLV_ZoneLookup" children="Controls">
          <Property name="Location">19, 223</Property>
          <Property name="Name">button_ClearLV_ZoneLookup</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">23</Property>
          <Property name="Text">Clear-List</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">button_ClearLV_ZoneLookup_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="button_GetDnsRecords" children="Controls">
          <Property name="Location">19, 141</Property>
          <Property name="Name">button_GetDnsRecords</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">22</Property>
          <Property name="Text">Test-DnsRecords</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">button_GetDnsRecords_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.PictureBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="pboxLogo01" children="Controls">
          <Property name="Image">
            <Binary>/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcG
BwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCACnAScDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8t6KK
K/UD8vCiiigAooooA/rZ/wCCbX/KOz4Df9k68P8A/ptt69rPSvFP+CbX/KOz4Df9k68P/wDptt69
rPSvzOt8b9T9Mo/w4+iCiiiszQKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKK
KKACiiigAooooAKKKKACiiigD+Luiiiv1A/LwooooAKKKKAP62f+CbX/ACjs+A3/AGTrw/8A+m23
r2s9K8U/4Jtf8o7PgN/2Trw//wCm23r2s9K/M63xv1P0yj/Dj6IKKKKzNAooooAKKKKACiiigAoo
ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP4u6KKK/UD8vCiiigAoo
ooA/rZ/4Jtf8o7PgN/2Trw//AOm23r2s9K8U/wCCbX/KOz4Df9k68P8A/ptt69rPSvzOt8b9T9Mo
/wAOPogooorM0CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKK
ACiiigAooooA/i7ooor9QPy8KKKKACiiigD+tn/gm1/yjs+A3/ZOvD//AKbbevaz0rxT/gm1/wAo
7PgN/wBk68P/APptt69rPSvzOt8b9T9Mo/w4+iCiiiszQKKKKACiiigAooooAKKKKACiiigAoooo
AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD+Luiiiv1A/LwooooAKKKKAP62f8Agm1/
yjs+A3/ZOvD/AP6bbevaz0rxT/gm1/yjs+A3/ZOvD/8A6bbevaz0r8zrfG/U/TKP8OPogooorM0C
iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA/i
7ooor9QPy8KK7T4N/AfxP8ar68m0Xw/rOraPoPk3GuXVlGMadavIEMhZuN2AxCgM3yMdpCmuw/bB
/ZI1r9nD4ieIpLXRdc/4V9B4gu9F0XW7nEsV80DEMPMCoezYZ403BSRnBrP2kVLkvqaeym489tDx
uiiitGZn9bP/AATa/wCUdnwG/wCydeH/AP0229e1npXin/BNr/lHZ8Bv+ydeH/8A0229es+JfFOm
+DNDuNT1jUbHSdNs13T3d5OkEEAyBlnYhVGSBye9fmdb436n6ZR/hx9EaVFc5rHxY8K+HfC9rrmo
eJPD9jot8UW21C41GGO1uC/3QkrMFYtg4wTnFTeLfiL4e8BaRDqGua9o2i2N06xQ3N9ex20Mrtyq
q7sASewB5rM0N2iqtxqltaaY95LcQx2ccZmad5AsaoBksW6Bcc56YrNHxC0F/CMmvrrekHQYkaR9
SF5H9jRVJDMZc7AAQQTngigDcorkW+O/gj7LZznxl4UWHUYTc2kh1a323UQJBkjO/DKCCNwyMg1u
+F/FWl+NtGh1LRtSsNW0+fPlXVlcpcQyYODtdCVOCCOD6igDRopoXAp1ABRRTQhJoAdRRRQAUU0p
mnUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB/FzPMLe3eRvuxqWOPavsj9p//AIIm
fFL9ln9nLw18Q9U1fw3qz+IreO6/4R6yS4XVYI38vO1HQecyeapkVcFFDvyqE147+yn4T+G/xNe6
8N+LvDvjK41+af7Xb67pOu21lp2jaeiq11c30Vxbyq0dtGkk2Qy+ZkRnqpr9rdV+KXhv9pr/AIJp
/C3VPj14L8G+G/EFxpENx4Y8R+PdW0zR9Ie72MLS7RJJHlYyRpBI8BttrLKysixnFfd47G1KM4qC
0vrtr2sfCYHBwqwk57203073Phf/AIJMXdj4w+EGofDv4seBfi9qGix6Q1/4Wg8O+ErvWIdZsL2Z
7gXBtvJeAyW18kN1b3jDI3tES8bba9T/AOCnNzDo3wO1az+EPwt+PUHij4hXupQa1bav4CvNKtPK
v/Nlvr2RIoFt7q4NvFb2cJYkwRRMyjzGZz9P/BHx747+Fn7J3wx1D4xuNU+Kytr1+LCy0k3Nr4ht
ra7M1olrd2YNtDZRR/Z7mKPiMxQrIQBCQeQ/ZAn+J2q/sWfE6fwv4u8ReIvivryeMvEFlY6VrUrx
6NqNxKlvb2RS+C3EkttNaIyPIiIv23J3K26vJliG6vtul++jeuu22h68aNqao36dtUtNN99T8xf+
Cfn/AAR6+In/AAUN8P6tqXh/XvDPheOwt/tNnBrAnNxqse1GEsaRqSID5iBZjkMwdVBKNj5c8VeG
7zwX4r1TRdQia31DRb2fT7qNgVMc0MjRuMHkYZSOea/oV/YL8T6f8Gvgv4y1zwr4L+GvxM/aObSJ
LnxbdfDrXNIuoZNRWJ3SC4t45bc26CRVQrBGyuxchmdmJ/Ff9p5vAS+E11xtD8a6l8QPiF5fiGPx
PPrFquhXQmZZL0xWcNrGyTxXX2m1eJ3+Qx72GWAr1cHjalWpOMttLbf1Y8vGYKnSpxlHfW+/y+Z/
S7/wTa/5R2fAb/snXh//ANNtvXnX/BTX9m3xR8etV+GeueCYPAvjPxF8NNQvdf8A+FdeMZtmj+NL
d7Y2shb5X8u4tzMpgneN445JcMBvDD0X/gm1/wAo7PgN/wBk68P/APptt62/2hv2N/hr+1Xe6Hde
PvC9vr134bFwmm3H2q4tZrVLjy/PjDwyIxjk8qLejEq3lrkHAr4mt8b9T7Sj/Dj6I/OnxT4S8OfE
r9n7wD+0h8MvhD4G8YfCnwf4C1ix8UfBHxSYIZPDlnJqNzNqF7pW5ZLdLkTW13FhlSO4hgCxPHgC
vS/2F/Afwt/bc/aw+OLeKvDOk+KvDvg/w/4S0T4f+HPEenrcw+H/AAnfaBb3kckNvOG2PczSzpLJ
y5NosZb91ivqrx7/AME3/gZ8TNe0W/1r4aeHbqTw/pNvoNlbpG9vZDTrd3eCykto2WCa3jaSQrFK
jIN7YHJq9+0D+wN8Iv2oPEtnrXjbwVY6prNjYtpUeoW9zcafdvZMdzWkkttJG8tuTk+TIWjySduS
c5mhmaL4p1DSriH4b+HvhJqUnwk0/wANpZ6d4tOsaZdaPParYjyYY7b7Q93KhG2Lc0W1sE5K4Y/n
t/wTs8P6T8Wrf9gf4X+OtO0+4+G//Cj7/wAZaTot2i/2b4i8SQy2EQM0Dfu7mS2tLm5nVXVtrzNL
jcgYfrBF8NtDtvh0nhG30+Gz8NxaaNHjsLUtbxw2gi8oQxlCCiiPCjaQQAMEYrzLU/8Agnb8FtZ+
Bvhn4bXHgHS28G+C5hc+HrRZ50m0GUbsPaXKyCe3YBmXMcinaxX7vFAHy7/wVH/Yq+Cfw2/Yx1zV
PCHw98CW2oN478I2VzJbafBN9j83xhp809uikMIFeS7nZ4kChvPbcCDivun4VfB7wr8D/Dc2jeD9
B0vw3o817PftY6dbrb26zzuZJXWNcKu9yWIUAEsT3rzy5/4J/wDwgvvgFb/C+TwXat4Ft9UGtf2Z
9tul86+FwbkXMsok82WXzz5u+R2JcK3UAj2KzgWxtY4Y93lxKEQFixAHA5OSePU5oAmopvmcUF/a
gB1FAOaDQAUU3zP9mgPkdDQA6imiTd/D+dRX2p2+l2jT3U0NtCuNzyuFUZ46njqaAJ6Kb5nseadQ
AUVWh1K3uLyW3juIZLiEAyRK4Lxg9MjqM+9WaACiiobm6jsrd5ppFjijUs7udqqB1JJ6CgCaioba
6jvbdJoZFkikUMjodysD0II6ipqACiiigAooooAKKKKACiiigD+UL/glf4Svvij+214Z8DWl5oNp
a/EC1vdC1Ndb0dNW025sjA1zLFPbNJHvQ/ZVYFJFdXRGB4IP6N/Ej/grT8GfjF/wUD0f4feIPB+l
6b8FJPD3/CI66nxG8PG1WBFSQ2babCFa4sxNJLArGRQDEqSYjMQNfkL8Fviv4g+CHxS0XxR4Z8Qa
l4V1jTblTHqun/8AHxZxsdsjICCGOwt8pGD071+kVj+1X+w38Rf2lND+JN5rvxaufH2k3MXnar8U
9Ok17R9ZhSBrcfaoLbzGZljYOnyoA6JnHNfcY+ipVOaUW1ZpW3T7/wCXpsfD4HEONPkUkndN32a7
f5no37NP7a/wh+Enwu039kX45eL/AAnpvhmw1eLWLXV/DepjxZ4Yv9Mlunu4tEuLyQO8PkTKsDuy
sjxR7WKBzV/9oT9v/wCGPhPUviJ8K/hb4y8K6f8AED9oK0/srXpIdVaHwf4N1F1mS51NtYZzkm2E
arBbDykaMfMpyK8O8Tf8HK/xK8G+KtU0/wAF/Db4Ew+H7G9mg0+5h8PXcH223V2WKby/tCmPegVt
h5XOD0rPn/4OcvjLfQtHqXwt+BmrW+3Bt5dFugrD05uSP0rh/s+s3z8u+trrfva3fzO769RS5Obb
S9una9+3kexeHf8Agpd8Kf2Av2m/gr4D8F+EvB994N8IaHHD4gi+GEH9rarL4iuIXhubdryYK9/a
/vY5E8slpn2ksTEEr5J/4LdaVa+E/wBpzQdJ0KTRYfA+paIfGXh3T9M8ODQl0+HV7mWZxPCXaVro
mFfNeXYSUUCNAMV9EfFn9rL9hvX/ANoTTPiprl94wuPHGmwWbab/AMKm0Cfw7Y6dNFuk+0SJcmPd
dCSRlLB3UrHH3zXwF+2n+0DeftI/tE6/r0ni7xf420OGd7Tw7qHiZ1bU10xWJgjn2gDzFBwxH3mB
bvXXg6Nqqnytaa36v+mzlxmIvT5OZPXS3Rf0j+oT/gm1/wAo7PgN/wBk68P/APptt68q/wCC2PiD
xjbfsXXGgfDvXNW8O+PvEuoZ0XUNLvZLW7t20+0udXm2mNlLCSDTpYSpypE+CDxXqv8AwTa/5R2f
AX/snXh//wBNtvXUfEz9nXSfip8YfAvjPUtQ1hLrwCuorZ6fC8P2G9N7ALeVp0aNnZlj3BCjpjzH
ByGIr46t8b9T7Cj/AA4+iPg2x/bp8QfEP9rnx58VNP15pvhnb/ADVvEHhbS5ru4/seabTZrSS9vZ
IY5FEjNNdyW3mD5gtn8rDJpmnf8ABQX4ofsw/Bj/AIR/wR8M/h/b+G/hf4N+Hd7c6bPfX/mWs2uz
fZZdIhd3keWZW2NHLIflVlEgdmBr6Gn/AOCOnwrh+HOm+EdL1HxloPh3S/hZqfwhjs7C+gVX0jUG
je5lZngZjdmSKNxICF3BsoQzA9N4s/4Jp+CfFzeKJrjXPGUeoeL9X8La3fXcV3BuW48PNbvY7IzC
Y1jZ7ZGlQoQ5d8bcgDM0Pnnxn+2hrXwW+LHxc8RaHofgHw7J4g+LsHw61Lx7rI1GfRLBbXQrWWyl
1KJZv3O+6uV08SxmKFZPnflgrbHjj/go/wDEz4LeLvjFqnii7+GX/CJ6H410T4ZeE4Sl1brba3dW
Gn3N1c3lyx+e0hF5O7BUV2FqEXazbj694n/4Jc+E/FfhHxp4Ym8afESHwd8R/EWr+IPFWgRXlmLT
Xf7TaFrmzlc2xmS3BhwnlSJKqSyL5hBXa7x9/wAEvPCPjbVfGF5D4u+IGh3HijxlYfEOyFje2pTw
z4gtI4ohfWQkt3/1scKpLDOZYWVnARd5NAHlfwT/AG//AI9/Fv4teC/BreDfAGl3WseFr3xdrOoa
pBqOmpp+mW+vvY294ts5aVTfWKC4htpSrxsWEkmFwfKPgJ/wUl8X+Efg38H/AAb8Lfh34LTxd4o0
LR/Hmp+F/tOo3kmoReItZuH2WRZ2kh2263t9Pc3LNDAvlJtIkBT7d0H9ifw/pvjLW/EeoeIvGXiD
xF4i8FReBL/UtQvYjPNZR3F5cecBHEipO0l9LlkUIFSJVRQnPJfCz/gmf4e+CHivwfqnhHx58SNB
/wCEZ8LaJ4N1C2tryz8nxVp+jmT+z1vc2xYSRiWVGe3MJdJGVsjGADk/2tf28/iD8C/j5448C+G/
D/hXWr6z8OeFNX8KpeGeN9Ru9V8QSaRNaTMr4+UIsiOoG3eSwZVNcVN/wVJ8feJvFWj65oOj+Aof
hn4s8LeNPFOjzXZuptUh07QBHFFqVxtZI/JuriaIrCq7lhkUmTfuRfp/xV+x74N8ZftY+H/jJqUe
oXXizwzoj6Hp8LXGLCNWlaQXDQgfPOnmSqjsSEWaTABbcPGfCX/BGH4X+C9F1LTbHxF8SDp+oeC/
EHw9it5dXhkXTtD1iVZZbS3JgzGIHQGFsl16OZQAAAP/AGB/23/ih+0Z8YW8O+P/AAf4V8O2958M
fDXxBt10u5nkutMk1NruN7O7Eny791o8ihPuKdpLkbj8o/s7/FrxZ4j/AG1PC11b+Jvip4bt/FHx
x8ZWUfiLXtbvbvwn4h0axbUrWDw3aWzTyQ/aWktTOjPHAY1tbjy5HO1D+inwh/ZK8O/BP4x+JPGe
i6hrhv8AxP4f0bw7dWlzPHNaxW+lLcLatGPLDq+LqXf85ViQdoPJ80+BH/BLHwf8EZ/DP2jxl8RP
Gdl4H1DVNX8M2Gu31r9l0PUNRe5e5vkS2t4fNuT9suwkk5kMYuH2bSc0AfK3wo/4KH/ET4b/ALOW
g33gHwH8NbH/AISr4deNfjHq32y71H7FYNa6v5guizyvK0d7HcFxCCCjkkMI0213HxW/4Ks/GTwx
beI9Q0H4f+B7mw8K+H/AGuaja313dR3UVx4iuDby6ShXIkuFYo0cm1UVWAdWLDHslh/wSI+G9l8I
G8FtrnjqbTm+E7/BtbhtQgW4j0RnZi42wBPtWCqmUqQQi5QnJPQeK/8Agmp4J8XzeKLq41zxlFqH
izWPC2u3t3FdW6stz4ea3ew2RmExLGz2yNKhQhiz42AgAA+ffi7/AMFePH1r44+LV14D8M+EdX8E
fCnT/F66pNdR3ct3pVzoNu224u5I3WFUu76Oa1itB+/ZE+0BioaNeR/bB/aU+IP7U/7Ofxy+DvxC
8JeEdHvL8fDvSdOt9PmlupYJvE2ppby2Vz5o2/abdU8zfH8oEq4yU3t9Pav/AMEt/CuueD/ip4Tm
8cfEyLwF8WpNWudQ8Lx6lbJYaZc6pP8AaL+e1f7OZ1aSYyOFklkjQzy7FXcNux8Qf+Cb3gv4h/FL
xN4uuNc8YWmpeKPF3hrxrPHbXUAhtr/QkjjtBGrQsfJdYk8yNywJBZdhJNAHmVl/wUV8a+N/2ifA
+n+H9L8E2Pw38aeJ/FHhmxub/wC0T6pNDoNreC71b926xR24v7VbdYSGZ0dZPMQsEHnHwm/4LK/E
K08H6P4q+JHw/wDDdno3iL4PW3xH03TtFu5/7TkvrnUbTT7Gzk83McaX0t2hi5JiCHeWOQvuPhr/
AIJI/Dzwn4/t9esfEnxEj/s+TxQNN086rC1lpMHiFjLqFtboYNyR/aCZ0O4ur4BdkVY1XxR/wSO+
Gvivwl/Yc2reNrfT4/h3ofw2txBqMKyWdpo159t069jcwllvYp8PvyY3KrujOBQB8xH9or4hfs6f
tN/Hf4neJLf4YaXrV54l8JfC7WfFENje3HhnwbBHpNzqgur4qyTyobjVLOya4dokRpoXfy0QrXuP
gv8A4KIfEL4jftp6X8MfD+heDdctPDevR+GPHaWJvZLuwkTRvt95qsUpAht7GK6mtLSJJwZbl5Jd
uwR/N18n/BK7wu/gPx14Xi+IHxSh8O/FLUr3UvGViNRspB4k+22NtY3cU0j2rSIksVshJidHUySb
HRWCr2/wn/Yj0b4G/HDxB4u8LeKvGmk6N4m1Aaxf+EIrm3Ohy3/2KKyNyAYDcgmGCEmMT+VvQPs3
UAeB/Hv4SyfGD/goxoPgXwj43+J0OpWN7bfET4jalbeNNSt7HQNIjAg07Qre0hlS1jOoT2zs4ZC/
kW94xbdNGw5Px5/wUr8a/GLwTql9D4b8FL8LfHnwl8aePNMtrgzTazDpWmpBBZ3V1uP2crfNdq4g
CHy0GGd23AfQnhv/AIJuaT4V+KfizxRY/E/4tQ/8J14ti8YeINOXULAW+q3ERgEVrJKLP7V9jSK3
hgECzhfKQp0Z93F6H/wRQ+Fug+DNS8Pw+JvibJpuo+Ab34ZBJdahdrPQLm5WdbSFvIygg2+XE3XY
zBzIx3AA8L+An/BRPWP2cf2JPgpoOh2vgvTvDfiHRNN8MfDzWtTS7vDqFrpOiB9T1GeytsTSb7iJ
LW1tIyk8juGfYCFHSX//AAVL+PWlC+a++GfgnTLrwvP8ObXxDpl5cXUd5b33iR7eG70mHBKvdWz3
McgkbCKhClXZty+5ax/wSl8Gp8QT4m8L+MPiF4D1a18T3vizSDol3ZmHQLrULY2+qR2sVxbSxrBe
8TSxOrqtwPNj8tmbdveJf+CbngrxRqurahca541Gpa14z8O+Orq7/tGOSR9Q0O3s4LMHfEymJlso
mkVgSzs7BlJGADgP+Ch//BRXxV+zp8VNN+HHwx0HQ/E3xEuPDx8Tx6VqUdzNJrSteLaWunWkduQw
mnkE7NcufJto7ZnkVlb5cHwJ/wAFF/it4m/aW0Dw7N4U8FN4M1b4x698LluopbpNSvYbDTbq8+3w
oSY1SF7OWGXcTvfO1UC5b3v4r/sX6X8SP2jtJ+KWn+L/ABx4N8TWejJ4c1H+wru3jg17TUujdR21
ws0EpXZM0hWSAxShZpV34YYy/DH/AATw8F+DfiD4L8SafqnipNQ8EeLvEnjO0V7uKSK6vdda5a9W
ZTFzEv2qQRBSrIABubnIB75RRRQAUUUUAFFFFAH8XdFfs3/xCHXH/RfU/wDCO/8Auyj/AIhDrj/o
vqf+Ed/92V97/bWE/m/B/wCR8H/Y2L/k/H/gn4yUV+zf/EIdcf8ARfU/8I7/AO7KP+IQ64/6L6n/
AIR3/wB2Uf21g/5vwf8AkH9jYv8Ak/H/AIJ+MlFfs3/xCHXH/RfU/wDCO/8Auyj/AIhDrj/ovif+
Ed/92Uv7awn834f8AFk2L/k/Ff5n6ff8E2jj/gnZ8Bf+yd+H/wD0229cN/wVZ/avv/2Pfg54B8TW
viyHwXp9/wDELRdL1zU57SG5hi0h5Hl1AsJEfbi0hnYMg3BlXGRkH2r9mz4Qn9n39nTwD4BOof2s
fBHhzT9BN95Pk/bPsltHB5uzLbN/l7tu44zjJ61xX7XP7Kd1+094z+Es0l9on/CN+AfFMviDWNJ1
LT2uk12J9MvdO+zjDqqAJfyvllcEooIwTXwtSSc213Z9xRi1BJ9keYeGv2y/iN8M/Dqv4m8I634y
8bfFjXNW1v4f+B7b7Fp9/o3hq0t4G/4mFyWWCN1yrnczusmoW8BLFWkHM+Lv+C5PhLQ/h63izS/h
z4+8RaCvw+0L4nPPZtZI9to2pzywbpVkmXbPFJDIvkqWaUqfL3AMyx+Gf+CXXxS+G+leC7Xw38Zt
LjuPh5ouveANB1LUfD8l3eQeE9Saze3jkP2lVfUrE2UCRXGBHKiDzIi2Sb3jn/gkUzfDPx54T8I+
LLPS9B8QaF4D8M6HZahpr3K6Xpvhm7M5t53WVWmF0ryIxGzbvJwxJqTQveKf+CgVn8EPj38Q5r7S
fiZ4jjk+I+gfC6LSI7rTptPsr250xbyKfTo12SnzkuofPWaRmVwCNiIxrz34rf8ABSP/AITPxl+z
745Wz8eeCbPTfEnjm08TeE4b9ZrrWpdFtbvT205YbaR4b+STUjbGAIXLMF2kZavXvDX/AATm1rT/
AIuL4i1DxpY3VnH8bLz4t/Z00phLcRS6FJpUFg7mUgNCXRxKBgrEq7AfmHmE3/BF/wAQar8PfAFp
d/FKG18VfCu08T3/AIX12x0VllsPEWqa9Bq0GrFWmO4IkMltNATtnju513IrYoA3fjp/wVQmtPhr
8cNLm+GXxU8N3nwt8Ped4o1bStQ0hZvDT3WkwXkKwSyyvG9+BdAJGI5VEkIL/I6F+C/aV/aOvvCv
je+0lfH3xS0F/Bvxd8A+EtWvNW1y0t9O+yxWaarfSRNarGzfa7B2FzHcFg0hURouFFes/E7/AIJ4
eIvGP7Lfx00HWPHXhu08QfGDxfp/jTUdTbS5E0zTYrSLR0ls2Rpt7QtHpUi7y6lVuOQdh3eP/Cv9
iOx/4Kf+AvGXijWdauLT4f8Aij42+IPGNjNawMtzrlpb6I3h7S76zuNymEwzQpewTBWDGCJlGGDU
AfRHw0/4KNXnxc+KWh+ENF+EvjSHXLrQ7PxNrVhqt7YabfeH9Nvri7hsriS3mmEkm/7KXlSMFrcS
xq48zdGvndp/wWz0fWP2cbP4iWPwp8c/Z9a0m913Rra+vtOtE1Ow0+BptTvRMZysVtbHyYfNlCia
a5gWMMrGQdPp37DPxW8efFL4Y+LPiR8QPAeqeIvhPY3UVh4g0Hwvcadq+tS3GnS2Usd47XTx/ZJJ
HS7eCNADNDCFKiPLc1rX/BJ3VtE8I/s1r4b1z4f6trnwC8Hv4LlHjDws+qaXqccsVgH1CK3S4Rob
qObT0kjy7DErqSCA4AM/4SftzTWX7Ufxi8TSW/xA1jTfEkvgrwv4K8ESzN9obWbvRZdXuIo4JpBD
aOLS6hkuSWVI0s3Y5YYbsPhZ/wAFPte+N3j34UaP4X+EWrXi+P7fxNeatJL4gsV/sCHRNTTS5ZBh
yLiOS5kQo6EZjIIViWCVdU/4Js+NY/jjcePdH+JGj2OuR/Fa4+INnLcaC9yi2d34cj0G5s5I/PUN
MkSeZDLnarAK0bruBz/2bf8Agl542/Zsj+F/9m/EfRLqTwf8PNX+HusSzaHMZL6O6vBeQX9u32jM
VyJUTzfM8xZOSAhxgAw/hn/wVj0X4e/s6fD3VofD/wAVPiBN4wSz8Q6i+r3GnHU9C0/WtdksdOVz
F5cVw7zM6W1vApd4LNyTuUb/AKK/ZC/bBb9r631jWNJ8Hatpfgu3uZ7XSNfudQs5V1eS3uZrW4ja
3jkae1ljkhOY5kU4YZ2sGRfBfgd/wSn8Ufs+fEz4ZeJNH8RfDTVL7wr8PPDvgLVLrWvCMt9dWbaM
twkd9pTfaV+zPcJdSLKr78bVYMfmU+y/sZ/sia5+z98Rvih448Ta14duvEnxXvbK/wBV07wzpk2m
aHb3FtC0LXccEs0zm6uQymeUsN/kwjBKF3APoGiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAAjIpqrtXA4HQAdqdRQAUUUUAFFFFABRRRQA
UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABR
RRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/Z</Binary>
          </Property>
          <Property name="Location">784, 6</Property>
          <Property name="Name">pboxLogo01</Property>
          <Property name="Size">259, 159</Property>
          <Property name="TabIndex">20</Property>
          <Property name="TabStop">False</Property>
        </Object>
        <Object type="System.Windows.Forms.ListView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Lst_ZoneLookup" children="Controls">
          <Property name="CheckBoxes">True</Property>
          <Property name="Columns">
            <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
              <Reference name="ZoneName" />
            </Item>
            <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
              <Reference name="ZoneType" />
            </Item>
            <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
              <Reference name="MasterServers" />
            </Item>
          </Property>
          <Property name="Cursor">Arrow</Property>
          <Property name="FullRowSelect">True</Property>
          <Property name="Location">19, 266</Property>
          <Property name="Name">Lst_ZoneLookup</Property>
          <Property name="Size">1024, 595</Property>
          <Property name="TabIndex">4</Property>
          <Property name="UseCompatibleStateImageBehavior">False</Property>
          <Property name="View">Details</Property>
          <Event name="ItemCheck">Lst_ZoneLookup_ItemCheck</Event>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="txt_Servername" children="Controls">
          <Property name="Location">102, 19</Property>
          <Property name="Name">txt_Servername</Property>
          <Property name="Size">155, 20</Property>
          <Property name="TabIndex">1</Property>
          <Event name="TextChanged">txt_Servername_TextChanged</Event>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="button_GetRVLZones" children="Controls">
          <Property name="Location">19, 98</Property>
          <Property name="Name">button_GetRVLZones</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">3</Property>
          <Property name="Text">Get-RVLZones</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">button_GetRVLZones_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="button_GetFWLZones" children="Controls">
          <Property name="Location">19, 55</Property>
          <Property name="Name">button_GetFWLZones</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">2</Property>
          <Property name="Text">Get-FWLZones</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">button_GetFWLZones_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelDNSServer" children="Controls">
          <Property name="Location">19, 19</Property>
          <Property name="Name">labelDNSServer</Property>
          <Property name="Size">74, 13</Property>
          <Property name="TabIndex">0</Property>
          <Property name="Text">DNS Server</Property>
        </Object>
      </Object>
      <Object type="System.Windows.Forms.TabPage, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="tabpage3" children="Controls">
        <Property name="Location">4, 22</Property>
        <Property name="Name">tabpage3</Property>
        <Property name="Padding">3, 3, 3, 3</Property>
        <Property name="Size">1060, 845</Property>
        <Property name="TabIndex">2</Property>
        <Property name="Text">Search-Results</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="LabelAlias" children="Controls">
          <Property name="Location">360, 57</Property>
          <Property name="Name">LabelAlias</Property>
          <Property name="Size">84, 23</Property>
          <Property name="TabIndex">50</Property>
          <Property name="Text">Hostname Alias</Property>
        </Object>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="LabelIpv4Address" children="Controls">
          <Property name="Location">360, 28</Property>
          <Property name="Name">LabelIpv4Address</Property>
          <Property name="Size">77, 23</Property>
          <Property name="TabIndex">49</Property>
          <Property name="Text">Ipv4Address</Property>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Txt_IpAddress" children="Controls">
          <Property name="Location">444, 25</Property>
          <Property name="Name">Txt_IpAddress</Property>
          <Property name="Size">183, 20</Property>
          <Property name="TabIndex">48</Property>
        </Object>
        <Object type="System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Checkbox_UpdatePTR" children="Controls">
          <Property name="Location">443, 86</Property>
          <Property name="Name">Checkbox_UpdatePTR</Property>
          <Property name="Size">104, 24</Property>
          <Property name="TabIndex">47</Property>
          <Property name="Text">Update PTR</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
        </Object>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelZone" children="Controls">
          <Property name="Location">19, 86</Property>
          <Property name="Name">labelZone</Property>
          <Property name="Size">100, 23</Property>
          <Property name="TabIndex">46</Property>
          <Property name="Text">Zone</Property>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Txt_Zone" children="Controls">
          <Property name="Location">129, 83</Property>
          <Property name="Name">Txt_Zone</Property>
          <Property name="Size">183, 20</Property>
          <Property name="TabIndex">45</Property>
        </Object>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="LabelDnsType" children="Controls">
          <Property name="Location">19, 28</Property>
          <Property name="Name">LabelDnsType</Property>
          <Property name="Size">100, 23</Property>
          <Property name="TabIndex">44</Property>
          <Property name="Text">DNS Record Type</Property>
        </Object>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelHostname" children="Controls">
          <Property name="Location">19, 57</Property>
          <Property name="Name">labelHostname</Property>
          <Property name="Size">56, 23</Property>
          <Property name="TabIndex">43</Property>
          <Property name="Text">Hostname</Property>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Txt_DnsType" children="Controls">
          <Property name="Location">129, 25</Property>
          <Property name="Name">Txt_DnsType</Property>
          <Property name="Size">183, 20</Property>
          <Property name="TabIndex">42</Property>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Txt_CsvPath" children="Controls">
          <Property name="Location">601, 234</Property>
          <Property name="MaxLength">256</Property>
          <Property name="Name">Txt_CsvPath</Property>
          <Property name="Size">286, 20</Property>
          <Property name="TabIndex">41</Property>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Btn_RemoveRecord" children="Controls">
          <Property name="FlatAppearance">
            <Property name="BorderColor">Red</Property>
          </Property>
          <Property name="Font">Microsoft Sans Serif, 8.25pt, style=Bold</Property>
          <Property name="ForeColor">Red</Property>
          <Property name="Location">893, 180</Property>
          <Property name="Name">Btn_RemoveRecord</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">40</Property>
          <Property name="Text">Remove-Record(s)</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">Btn_RemoveRecord_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Txt_Hostname" children="Controls">
          <Property name="Location">129, 54</Property>
          <Property name="Name">Txt_Hostname</Property>
          <Property name="Size">183, 20</Property>
          <Property name="TabIndex">39</Property>
        </Object>
        <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Txt_Alias" children="Controls">
          <Property name="Location">444, 54</Property>
          <Property name="Name">Txt_Alias</Property>
          <Property name="Size">183, 20</Property>
          <Property name="TabIndex">36</Property>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Button_AddRecord" children="Controls">
          <Property name="Location">180, 148</Property>
          <Property name="Name">Button_AddRecord</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">38</Property>
          <Property name="Text">Add-Record</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">Button_AddRecord_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="checkbox_PTR" children="Controls">
          <Property name="Location">298, 236</Property>
          <Property name="Name">checkbox_PTR</Property>
          <Property name="Size">65, 24</Property>
          <Property name="TabIndex">35</Property>
          <Property name="Text">PTR</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">checkbox_PTR_CheckedChanged</Event>
        </Object>
        <Object type="System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="checkbox_A" children="Controls">
          <Property name="Location">248, 237</Property>
          <Property name="Name">checkbox_A</Property>
          <Property name="Size">64, 23</Property>
          <Property name="TabIndex">34</Property>
          <Property name="Text">A</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">checkbox_A_CheckedChanged</Event>
        </Object>
        <Object type="System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="checkbox_Cname" children="Controls">
          <Property name="Location">180, 237</Property>
          <Property name="Name">checkbox_Cname</Property>
          <Property name="Size">64, 23</Property>
          <Property name="TabIndex">33</Property>
          <Property name="Text">CNAME</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">checkbox_Cname_CheckedChanged</Event>
        </Object>
        <Object type="System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="checkbox_SRV" children="Controls">
          <Property name="Location">121, 237</Property>
          <Property name="Name">checkbox_SRV</Property>
          <Property name="Size">60, 23</Property>
          <Property name="TabIndex">32</Property>
          <Property name="Text">SRV</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">checkbox_SRV_CheckedChanged</Event>
        </Object>
        <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelShow" children="Controls">
          <Property name="Location">19, 240</Property>
          <Property name="Name">labelShow</Property>
          <Property name="Size">44, 23</Property>
          <Property name="TabIndex">31</Property>
          <Property name="Text">Show:</Property>
        </Object>
        <Object type="System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="checkbox_NS" children="Controls">
          <Property name="Location">65, 237</Property>
          <Property name="Name">checkbox_NS</Property>
          <Property name="Size">60, 23</Property>
          <Property name="TabIndex">30</Property>
          <Property name="Text">NS</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="CheckedChanged">checkbox_NS_CheckedChanged</Event>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Button_SetDnsName" children="Controls">
          <Property name="Location">19, 148</Property>
          <Property name="Name">Button_SetDnsName</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">25</Property>
          <Property name="Text">Set-Record / IP</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">Button_SetDnsName_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="button_ExportToFile" children="Controls">
          <Property name="Location">893, 223</Property>
          <Property name="Name">button_ExportToFile</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">24</Property>
          <Property name="Text">Export-File</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">button_ExportToFile_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="button_ClearLV_DnsRecords" children="Controls">
          <Property name="Location">19, 191</Property>
          <Property name="Name">button_ClearLV_DnsRecords</Property>
          <Property name="Size">150, 37</Property>
          <Property name="TabIndex">23</Property>
          <Property name="Text">Clear-List</Property>
          <Property name="UseVisualStyleBackColor">True</Property>
          <Event name="Click">button_ClearLV_DnsRecords_Click</Event>
        </Object>
        <Object type="System.Windows.Forms.ListView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Lst_DnsRecords" children="Controls">
          <Property name="AllowColumnReorder">True</Property>
          <Property name="CheckBoxes">True</Property>
          <Property name="Columns">
            <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
              <Reference name="DnsName" />
            </Item>
            <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
              <Reference name="DnsData" />
            </Item>
            <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
              <Reference name="DnsType" />
            </Item>
            <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
              <Reference name="DnsZone" />
            </Item>
            <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
              <Reference name="Ping" />
            </Item>
          </Property>
          <Property name="FullRowSelect">True</Property>
          <Property name="Location">19, 266</Property>
          <Property name="Name">Lst_DnsRecords</Property>
          <Property name="Size">1024, 563</Property>
          <Property name="TabIndex">22</Property>
          <Property name="UseCompatibleStateImageBehavior">False</Property>
          <Property name="View">Details</Property>
          <Event name="ItemChecked">Lst_DnsRecords_ItemChecked</Event>
        </Object>
        <Object type="System.Windows.Forms.PictureBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="picturebox1" children="Controls">
          <Property name="Image">
            <Binary>/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcG
BwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCACnAScDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8t6KK
K/UD8vCiiigAooooA/rZ/wCCbX/KOz4Df9k68P8A/ptt69rPSvFP+CbX/KOz4Df9k68P/wDptt69
rPSvzOt8b9T9Mo/w4+iCiiiszQKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKK
KKACiiigAooooAKKKKACiiigD+Luiiiv1A/LwooooAKKKKAP62f+CbX/ACjs+A3/AGTrw/8A+m23
r2s9K8U/4Jtf8o7PgN/2Trw//wCm23r2s9K/M63xv1P0yj/Dj6IKKKKzNAooooAKKKKACiiigAoo
ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP4u6KKK/UD8vCiiigAoo
ooA/rZ/4Jtf8o7PgN/2Trw//AOm23r2s9K8U/wCCbX/KOz4Df9k68P8A/ptt69rPSvzOt8b9T9Mo
/wAOPogooorM0CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKK
ACiiigAooooA/i7ooor9QPy8KKKKACiiigD+tn/gm1/yjs+A3/ZOvD//AKbbevaz0rxT/gm1/wAo
7PgN/wBk68P/APptt69rPSvzOt8b9T9Mo/w4+iCiiiszQKKKKACiiigAooooAKKKKACiiigAoooo
AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD+Luiiiv1A/LwooooAKKKKAP62f8Agm1/
yjs+A3/ZOvD/AP6bbevaz0rxT/gm1/yjs+A3/ZOvD/8A6bbevaz0r8zrfG/U/TKP8OPogooorM0C
iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA/i
7ooor9QPy8KK7T4N/AfxP8ar68m0Xw/rOraPoPk3GuXVlGMadavIEMhZuN2AxCgM3yMdpCmuw/bB
/ZI1r9nD4ieIpLXRdc/4V9B4gu9F0XW7nEsV80DEMPMCoezYZ403BSRnBrP2kVLkvqaeym489tDx
uiiitGZn9bP/AATa/wCUdnwG/wCydeH/AP0229e1npXin/BNr/lHZ8Bv+ydeH/8A0229es+JfFOm
+DNDuNT1jUbHSdNs13T3d5OkEEAyBlnYhVGSBye9fmdb436n6ZR/hx9EaVFc5rHxY8K+HfC9rrmo
eJPD9jot8UW21C41GGO1uC/3QkrMFYtg4wTnFTeLfiL4e8BaRDqGua9o2i2N06xQ3N9ex20Mrtyq
q7sASewB5rM0N2iqtxqltaaY95LcQx2ccZmad5AsaoBksW6Bcc56YrNHxC0F/CMmvrrekHQYkaR9
SF5H9jRVJDMZc7AAQQTngigDcorkW+O/gj7LZznxl4UWHUYTc2kh1a323UQJBkjO/DKCCNwyMg1u
+F/FWl+NtGh1LRtSsNW0+fPlXVlcpcQyYODtdCVOCCOD6igDRopoXAp1ABRRTQhJoAdRRRQAUU0p
mnUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB/FzPMLe3eRvuxqWOPavsj9p//AIIm
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
AfRHw0/4KNXnxc+KWh+ENF+EvjSHXLrQ7PxNrVhqt7YabfeH9Nvri7hsriS3mmEkm/7KXlSMFrcS
xq48zdGvndp/wWz0fWP2cbP4iWPwp8c/Z9a0m913Rra+vtOtE1Ow0+BptTvRMZysVtbHyYfNlCia
a5gWMMrGQdPp37DPxW8efFL4Y+LPiR8QPAeqeIvhPY3UVh4g0Hwvcadq+tS3GnS2Usd47XTx/ZJJ
HS7eCNADNDCFKiPLc1rX/BJ3VtE8I/s1r4b1z4f6trnwC8Hv4LlHjDws+qaXqccsVgH1CK3S4Rob
qObT0kjy7DErqSCA4AM/4SftzTWX7Ufxi8TSW/xA1jTfEkvgrwv4K8ESzN9obWbvRZdXuIo4JpBD
aOLS6hkuSWVI0s3Y5YYbsPhZ/wAFPte+N3j34UaP4X+EWrXi+P7fxNeatJL4gsV/sCHRNTTS5ZBh
yLiOS5kQo6EZjIIViWCVdU/4Js+NY/jjcePdH+JGj2OuR/Fa4+INnLcaC9yi2d34cj0G5s5I/PUN
MkSeZDLnarAK0bruBz/2bf8Agl542/Zsj+F/9m/EfRLqTwf8PNX+HusSzaHMZL6O6vBeQX9u32jM
VyJUTzfM8xZOSAhxgAw/hn/wVj0X4e/s6fD3VofD/wAVPiBN4wSz8Q6i+r3GnHU9C0/WtdksdOVz
F5cVw7zM6W1vApd4LNyTuUb/AKK/ZC/bBb9r631jWNJ8Hatpfgu3uZ7XSNfudQs5V1eS3uZrW4ja
3jkae1ljkhOY5kU4YZ2sGRfBfgd/wSn8Ufs+fEz4ZeJNH8RfDTVL7wr8PPDvgLVLrWvCMt9dWbaM
twkd9pTfaV+zPcJdSLKr78bVYMfmU+y/sZ/sia5+z98Rvih448Ta14duvEnxXvbK/wBV07wzpk2m
aHb3FtC0LXccEs0zm6uQymeUsN/kwjBKF3APoGiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAAjIpqrtXA4HQAdqdRQAUUUUAFFFFABRRRQA
UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABR
RRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/Z</Binary>
          </Property>
          <Property name="Location">784, 6</Property>
          <Property name="Name">picturebox1</Property>
          <Property name="Size">259, 159</Property>
          <Property name="TabIndex">21</Property>
          <Property name="TabStop">False</Property>
        </Object>
      </Object>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="DnsName">
    <Property name="Text">DnsName</Property>
    <Property name="Width">280</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="DnsData">
    <Property name="Text">DnsData</Property>
    <Property name="Width">180</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="DnsType">
    <Property name="Text">DnsType</Property>
    <Property name="Width">120</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="DnsZone">
    <Property name="Text">DnsZone</Property>
    <Property name="Width">280</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Ping">
    <Property name="Text">Ping</Property>
    <Property name="Width">180</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ZoneName">
    <Property name="Text">ZoneName</Property>
    <Property name="Width">210</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ZoneType">
    <Property name="Text">ZoneType</Property>
    <Property name="Width">160</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="MasterServers">
    <Property name="Text">MasterServers</Property>
    <Property name="Width">280</Property>
  </Object>
  <Code><![CDATA[<# ! MAIN FORUM SETTINGS !: Als het forum geladen wordt, dan moeten deze waardes gezet worden #>

$form1_Load = {
	
	#Greyed out Buttons until servername has been identified
	$Txt_ServerName.Select()
	$button_GetFWLZones.Enabled = $false
	$button_GetRVLZones.Enabled = $false
	$Button_RecordLookup.Enabled = $false
	$button_GetDnsRecords.Enabled = $false
	$button_GetDnsRecords.Enabled = $false
	$Button_SetDnsName.Enabled = $false
	
	#Greyed out text boxes until DNS recordtype is identified
	
	$Txt_IpAddress.Enabled = $false
	$LabelIpv4Address.Visible = $true
	$Txt_Hostname.Enabled = $false
	$labelHostname.Visible = $true
	$Txt_Zone.Enabled = $false
	$labelZone.Visible = $true
	$Txt_Alias.Enabled = $false
	$LabelAlias.Visible = $true
		
}

<# ! STATECHANGE !: Hieronder volgt een lijst van state-veranderingen. Dit resulteert in bijvoorbeeld een button unlock. #>

$txt_Servername_TextChanged = {
	#TODO: Place custom script here
	$button_GetFWLZones.Enabled = $true
	$button_GetRVLZones.Enabled = $true
	$Button_RecordLookup.Enabled = $true
}

$Lst_ZoneLookup_ItemCheck = [System.Windows.Forms.ItemCheckEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.ItemCheckEventArgs]
	#TODO: Place custom script here
	$Button_RecordLookup.Enabled = $true
	$button_GetDnsRecords.Enabled = $true
}

$Lst_DnsRecords_ItemChecked = [System.Windows.Forms.ItemCheckedEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.ItemCheckedEventArgs]
	#TODO: Place custom script here
	$Button_AddRecord.Enable = $false
	$Button_SetDnsName.Enabled = $true
}

<# ! FUNCTIONS !: Hieronder volgen functies voor Listview controls #>

#region Control Helper Functions
function Sort-ListViewColumn 
{
	<#
	.SYNOPSIS
		Sort the ListView's item using the specified column.

	.DESCRIPTION
		Sort the ListView's item using the specified column.
		This function uses Add-Type to define a class that sort the items.
		The ListView's Tag property is used to keep track of the sorting.

	.PARAMETER ListView
		The ListView control to sort.

	.PARAMETER ColumnIndex
		The index of the column to use for sorting.
		
	.PARAMETER  SortOrder
		The direction to sort the items. If not specified or set to None, it will toggle.
	
	.EXAMPLE
		Sort-ListViewColumn -ListView $listview1 -ColumnIndex 0
#>
	param(	
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ListView]$ListView,
			[Parameter(Mandatory=$true)]
			[int]$ColumnIndex,
			[System.Windows.Forms.SortOrder]$SortOrder = 'None')
	
	if(($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
	{
		return;
	}
	
	#region Define ListViewItemComparer
		try{
		$local:type = [ListViewItemComparer]
	}
	catch{
	Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@  | Out-Null
	}
	#endregion
	
	if($ListView.Tag -is [ListViewItemComparer])
	{
		#Toggle the Sort Order
		if($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			if($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
			{
				$ListView.Tag.sortOrder = 'Descending'
			}
			else
			{
				$ListView.Tag.sortOrder = 'Ascending'
			}
		}
		else
		{
			$ListView.Tag.sortOrder = $SortOrder
		}
		
		$ListView.Tag.column = $ColumnIndex
		$ListView.Sort()#Sort the items
	}
	else
	{
		if($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			$SortOrder = [System.Windows.Forms.SortOrder]::Ascending	
		}
		
		#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
		$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder) 
		$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
	}
}


function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param( 
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[System.Windows.Forms.ListView]$ListView,
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	$Items,
	[int]$ImageIndex = -1,
	[string[]]$SubItems,
	$Group,
	[switch]$Clear)
	
	if($Clear)
	{
		$ListView.Items.Clear();
    }
    
    $lvGroup = $null
    if ($Group -is [System.Windows.Forms.ListViewGroup])
    {
        $lvGroup = $Group
    }
    elseif ($Group -is [string])
    {
        #$lvGroup = $ListView.Group[$Group] # Case sensitive
        foreach ($groupItem in $ListView.Groups)
        {
            if ($groupItem.Name -eq $Group)
            {
                $lvGroup = $groupItem
                break
            }
        }
        
        if ($lvGroup -eq $null)
        {
            $lvGroup = $ListView.Groups.Add($Group, $Group)
        }
    }
    
	if($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{		
			$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if($SubItems -ne $null)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($lvGroup -ne $null)
			{
				$listitem.Group = $lvGroup
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if($SubItems -ne $null)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if($lvGroup -ne $null)
		{
			$listitem.Group = $lvGroup
		}
	}
}

#endregion

Function Get-DnsSearch {
	
<#

.SYNOPSIS:     Voer een DNS naam of IP adres in, om uit te vinden in welke zone deze zich bevind.

.DESCRIPTION:  Met set-dnssearch -computername -ip(address) kan je de record informatie opzoeken op basis van ip-adres zelfs als er geen reverse lookup record voor is.

.EXAMPLE:      set-dnssearch -computername addc011 -ip 10.42.196.13

#>
	
	[CmdletBinding()]
	param (
		
		[Parameter(Mandatory = $True, ValueFromPipeline = $True)]
		[Alias('ip')]
		$DNSLookup,
		[Parameter(Mandatory = $True, ValueFromPipeline = $True)]
		[ValidateLength(3, 50)]
		[string]$ServerName
	)
	
	begin {	
	}
	
	process
	{
		
		$Zones = (Get-DnsServerZone -ComputerName $ServerName).ZoneName
		
		If ($Zones)
		{
			ForEach ($Zone in $Zones)
			{
				
				Get-DnsServerResourceRecord -Computername $ServerName -ZoneName $Zone | ? {
					($_.RecordData.IPv4Address -match "$DNSLookup") -OR
					($_.RecordData.HostNameAlias -match "$DNSLookup") -OR
					($_.RecordData.PtrDomainName -match "$DNSLookup") -OR
					($_.HostName -match "$DNSLookup")
				}
				#Get-DnsServerStatistics -Computername $ServerName -ZoneName $Zone | Out-File -FilePath "$LogFiles\$zone.txt"
			}
		}
		Else {
			[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
			[System.Windows.Forms.MessageBox]::Show("Error - No DNS zones found!")
		}
	}
}

Function Export-ItemsCsv {
	
	param (
		[parameter(Mandatory = $True)]
		[String]$CsvPath
	)
	
	$CsvCount = $Lst_DnsRecords.CheckedItems.Count
	
	If (!($Lst_DnsRecords.CheckedItems.Count -eq "0")) {
		
		$CsvArray = @()
				
		$Lst_dnsrecords.CheckedItems | % {
			
			$Object = New-Object System.Management.Automation.PSObject
			$lvItem = $_
			$Lst_dnsrecords.Columns | % {
				
				$Object | Add-Member NoteProperty -Name $_.Text -Value $lvItem.SubItems[$_.Index].Text -Force
			}
			$CsvArray += $Object
			Remove-Variable Object
		}
		
		$csvarray | Select-Object DnsName, DnsData, DnsType, DnsZone | Export-Csv -NTI -LiteralPath $CsvPath -Force
	}
	Else {
		
		$CsvArray = @()
		$CsvCount = $Lst_DnsRecords.Items.Count
		
		$Lst_dnsrecords.Items | % {
			
			$Object = New-Object System.Management.Automation.PSObject
			$lvItem = $_
			$Lst_dnsrecords.Columns | % {
				
				$Object | Add-Member NoteProperty -Name $_.Text -Value $lvItem.SubItems[$_.Index].Text -Force
			}
			$CsvArray += $Object
			Remove-Variable Object
		}
		
		$csvarray | Select-Object DnsName, DnsData, DnsType, DnsZone, Ping | Export-Csv -NTI -LiteralPath $CsvPath -Force
		
		
	}
	[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
	[System.Windows.Forms.MessageBox]::Show("Exported file to path: $($CsvPath)")
	Return
}

Function Check-DC {
	
	[CmdletBinding()]
	Param (
		
		[parameter(Mandatory = $True)]
		$Servername
		
	)
	
	$DCArray = @()
	$DClist = @(get-adobject -filter 'PrimaryGroupId -eq "516"').DistinguishedName
	
	foreach ($DCitem in $DcList) {
		
		$DCObject = New-Object psobject
		$DCObject | Add-Member -MemberType NoteProperty -Name Name -Value ($DCItem.Split(",")[0]).SubString(3)
		
		[array]$DCArray += $DCobject.name
		
	}
	
	If ($DCarray -icontains $Servername) {
		
		return $True
		
	}
	
	Else {
		
		Return $False
		
	}
	
}

Function Get-ListviewSelection {
	
	$Lst_dnsrecords.Items | % {
		
		$UpdateViewObject = New-Object System.Management.Automation.PSObject
		$UpdateViewItem = $_
		
		$Lst_dnsrecords.Columns | % {
			
			$UpdateViewObject | Add-Member NoteProperty -Name $_.Text -Value $UpdateViewItem.SubItems[$_.Index].Text -Force
		}
		$script:UpdateViewArray += $UpdateViewObject
		Remove-Variable UpdateViewObject
	}
}

<# ! BUTTONS !: Hieronder volgen button clicks en hun acties #>

<# Get Forward lookup Zones #>
$button_GetFWLZones_Click= {
	#TODO: Place custom script here
	
	$ServerName = $Txt_ServerName.Text
	$ServerCheck = Check-DC -Servername $ServerName
	
	If ($ServerCheck -eq $true) {
		
		$Zones = (Get-DnsServerZone -ComputerName $ServerName | where { $_.IsReverseLookupZone -match $False }) | Select-Object -Property ZoneName, ZoneType, MasterServers
		
		$Lst_ZoneLookup.Items.Clear
		foreach ($Zone in $Zones) {
			
			Add-ListViewItem -ListView $Lst_ZoneLookup -Items "$($Zone.ZoneName)" -ImageIndex 0 -SubItems "$($Zone.ZoneType)", "$($Zone.MasterServers)"
		}
	}
	Else {
		
		[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
		[System.Windows.Forms.MessageBox]::Show("The specified server is not a valid DNS server.")
		Return
		
	}
	
 }

<# Get Reversed Lookup Zones #>
$button_GetRVLZones_Click={
	#TODO: Place custom script here
	$ServerName = $Txt_ServerName.Text
	$ServerCheck = Check-DC -Servername $ServerName
	
	If ($ServerCheck -eq $true) {
		
		$Zones = (Get-DnsServerZone -ComputerName $ServerName | where { $_.IsReverseLookupZone -match $true }) | Select-Object -Property ZoneName, ZoneType, MasterServers
		
		$Lst_ZoneLookup.Items.Clear
		
		foreach ($Zone in $Zones) {
			Add-ListViewItem -ListView $Lst_ZoneLookup -Items "$($Zone.ZoneName)" -ImageIndex 0 -SubItems "$($Zone.ZoneType)", "$($Zone.MasterServers)"
		}
	}
	Else {
		
		[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
		[System.Windows.Forms.MessageBox]::Show("The specified server is not a valid DNS server.")
		Return
		
	}
}

<# Get DNS Record Lookup #>

$Button_RecordLookup_Click = {
	#TODO: Place custom script here
	$tabcontrol1.SelectTab(1)
	$Lst_dnsrecords.Items.Clear()
	$script:UpdateViewArray = @()
	$DnsLookup = $Txt_DnsLookup.Text
	$ServerName = $Txt_ServerName.Text
	
	If ((!($Dnslookup)) -OR (!($ServerName))) {
		
		[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
		[System.Windows.Forms.MessageBox]::Show("No server or DNS lookup value present.")
		Return
	}
	Else {
		
		$LookupResults = (Get-DnsSearch -DNSLookup $DnsLookup -ServerName $ServerName -ErrorVariable ErrorLookup -ErrorAction Stop)
		$Ping = "-"
		
		If (!($LookupResults)) {
			[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
			[System.Windows.Forms.MessageBox]::Show("No records have been found.")
			Return
		}
		Else {
			
			foreach ($LookupResult in $LookupResults) {
				
				If ($($LookupResult.RecordType) -eq "A") {
					
					Add-ListViewItem -ListView $Lst_DnsRecords -Items "$($LookupResult.HostName)" -ImageIndex 0 -SubItems "$($LookupResult.RecordData.Ipv4Address)", "$($LookupResult.RecordType)", "$((($LookupResult.distinguishedName).split(",")[1].Trim("DC=")))", "$($Ping)"
				}
				Elseif ($($LookupResult.RecordType) -eq "CNAME") {
					
					Add-ListViewItem -ListView $Lst_DnsRecords -Items "$($LookupResult.HostName)" -ImageIndex 0 -SubItems "$($LookupResult.RecordData.HostnameAlias)", "$($LookupResult.RecordType)", "$((($LookupResult.distinguishedName).split(",")[1].Trim("DC=")))", "$($Ping)"
				}
				Elseif ($($LookupResult.RecordType) -eq "NS") {
					
					Add-ListViewItem -ListView $Lst_DnsRecords -Items "$($LookupResult.HostName)" -ImageIndex 0 -SubItems "$($LookupResult.RecordData.HostnameAlias)", "$($LookupResult.RecordType)", "$((($LookupResult.distinguishedName).split(",")[1].Trim("DC=")))", "$($Ping)"
				}
				Elseif ($($LookupResult.RecordType) -eq "SRV") {
					
					Add-ListViewItem -ListView $Lst_DnsRecords -Items "$($LookupResult.HostName)" -ImageIndex 0 -SubItems "$($LookupResult.RecordData.HostnameAlias)", "$($LookupResult.RecordType)", "$((($LookupResult.distinguishedName).split(",")[1].Trim("DC=")))", "$($Ping)"
				}
				Elseif ($($LookupResult.RecordType) -eq "PTR") {
					
					Add-ListViewItem -ListView $Lst_DnsRecords -Items "$($LookupResult.HostName)" -ImageIndex 0 -SubItems "$($LookupResult.RecordData.ptrdomainname)", "$($LookupResult.RecordType)", "$((($LookupResult.distinguishedName).split(",")[1].Trim("DC=")))", "$($Ping)"
				}
			}
		}
		Get-ListviewSelection
	}
}

<# Get PING CHECK DNS records #>

$button_GetDnsRecords_Click={
	
	#TODO: Set defaults for tab page: Dead-Records
	$script:UpdateViewArray = @()
	$tabcontrol1.SelectTab(1)
	$Lst_DnsRecords.Items.Clear()
	$ServerName = $Txt_ServerName.Text
	
	$ZoneSelection = [array]$Lst_ZoneLookup.CheckedItems.Text
		
	# Get all zones-names and don't retrieve the reversed lookup zones. Put them in a variable. 
	$Zones = Get-DnsServerZone -ComputerName $ServerName -Name $ZoneSelection | Select-Object -Property ZoneName, ZoneType
	
	# For each statement to go through all zones:
	ForEach ($Zone in $Zones) {		
		# Write the zone-naam as title in the console and to the results file in parameter $path.
			
		# Fetch all the A-records and leave uit the global catalog servers and nameservers. Select the hostname and the recorddata containing the ip-addresses and save them to $Records.
		
		$Records = (Get-DnsServerResourceRecord -computername $ServerName -ZoneName $Zone.ZoneName | where {
			($_.hostname -notmatch '@') -AND `
			($_.hostname -notmatch 'gc') -AND `
			($_.hostname -notmatch '_kpasswd._udp') -AND `
			($_.hostname -notmatch '_kerberos._udp') -AND `
			($_.hostname -notmatch '_ldap._udp') -AND `
			($_.hostname -notmatch '_kerberos._tcp') -AND `
			($_.hostname -notmatch '_kpasswd._tcp') -AND `
			($_.hostname -notmatch '_ldap._tcp')} | Select-Object -Property Hostname, RecordData, RecordType)
		#$Records = (Get-DnsServerResourceRecord -computername $ServerName -ZoneName $Zone.ZoneName  | Select-Object -Property Hostname, RecordData, RecordType)
		# For each statement to go through all A-type dns-records. Break when Stop-Lookup Button is pushed.
		Foreach ($Record in $Records) {
			# Perform a test-netconnection and to be certain of failure extend to maximum TTL. Write the result if true to console. 
						
			# If ((Test-NetConnection -InformationLevel Quiet -hops 120 -ComputerName ($Record.recorddata.ipv4address)).PingSucceeded -eq $True) {
			If ((Test-NetConnection -InformationLevel Quiet -OutBuffer 16 -hops 20 -ComputerName ($Record.recorddata.ipv4address) -WarningAction SilentlyContinue) -eq $True) {
				$Alive = [string]"Alive"
				Add-ListViewItem -ListView $Lst_DnsRecords -Items "$($Record.HostName)" -ImageIndex 0 -SubItems "$($Record.RecordData.ipv4address)", "$($Record.RecordType)", "$($Zone.ZoneName)", "$($Alive)"
			}
			# Perform a test-netconnection in the else-statement and write back all failures to console and the results file $path.                        
			
			# Elseif ((Test-NetConnection -ComputerName ($Record.recorddata.ipv4address)).PingSucceeded -eq $False) {
			Else {
				$Dead = [string]"Dead"
				Add-ListViewItem -ListView $Lst_DnsRecords -Items "$($Record.HostName)" -ImageIndex 0 -SubItems "$($Record.RecordData.ipv4address)", "$($Record.RecordType)", "$($Zone.ZoneName)", "$($Dead)"
			}
		}
	}
	Get-ListviewSelection
}

<# Clear Zones results in List #>

$button_ClearLV_DnsRecords_Click={
	#TODO: Place custom script here
	$Lst_DnsRecords.Items.Clear()
}

<# Clear DNS results in List #>

$button_ClearLV_ZoneLookup_Click={
	#TODO: Place custom script here
	$Lst_ZoneLookup.Items.Clear()
	$txt_Servername.Clear()
	$button_GetFWLZones.Enabled = $false
	$button_GetRVLZones.Enabled = $false
}

<# Export checked rows to CSV #>

$button_ExportToFile_Click= {
	#TODO: Place custom script here
	$csvpath = $Txt_CsvPath.Text
	
	If ($CsvPath) {
		
		Export-ItemsCsv -CsvPath $csvpath
	}
	else {
		[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
		[System.Windows.Forms.MessageBox]::Show("Please enter a CSV path.")
		Return
	}
	
}

<# Remove checked DNS records from DNS #>

$Btn_RemoveRecord_Click = {
	
	#TODO: Place custom script here
	$ServerName = $Txt_ServerName.Text
	
	$CheckedHostName = [String]$Lst_DnsRecords.CheckedItems[0].SubItems[0].Text
	$CheckedRecordData = [String]$Lst_DnsRecords.CheckedItems[0].SubItems[1].Text
	$CheckedDnsType = [String]$Lst_DnsRecords.CheckedItems[0].SubItems[2].Text
	$CheckedZoneName = [String]$Lst_DnsRecords.CheckedItems[0].SubItems[3].Text
	
	$CimSession = New-CimSession -Authentication Kerberos -ComputerName $ServerName -Credential "$env:USERDOMAIN\" -Name "CimDnstool"
	If ($CimSession) {
		
		$Msg_DeleteRecord = [System.Windows.Forms.Messagebox]::Show("You want to delete DNS-record: $($CheckedHostName)?", "Warning", "4")
		If ($Msg_DeleteRecord -eq "Yes") {
			
			Remove-DnsServerResourceRecord -ZoneName "$CheckedZoneName" -ComputerName "$ServerName" -Name "$CheckedHostName" -RRType "$CheckedDnsType" -RecordData "$CheckedRecordData" -CimSession $CimSession -Force
			$ExportCsvFolder = Test-Path -Path "D:\DNS Beheer"
			If ($ExportCsvFolder -eq $false) {
				New-Item -Type Directory -Path "D:\DNS Beheer"
			}
			Export-ItemsCsv -CsvPath "$ExportCsvFolder"
			$Lst_DnsRecords.Items.Clear()
		}
		Else {
			Return
		}
	}
}

<# Change DNS IP or hostname (A, CNAME,SRV,PTR records) #>

$Button_SetDnsName_Click={
	#TODO: Place custom script here
	$Servername = $txt_Servername.Text
	$Txt_Alias = $Txt_Alias.Text
	$Date =  Get-Date -Format d
	
	$CheckedHostName = [String]$Lst_DnsRecords.CheckedItems[0].SubItems[0].Text
	$CheckedRecordData = [String]$Lst_DnsRecords.CheckedItems[0].SubItems[1].Text
	$CheckedDnsType = [String]$Lst_DnsRecords.CheckedItems[0].SubItems[2].Text
	$CheckedZoneName = [String]$Lst_DnsRecords.CheckedItems[0].SubItems[3].Text
	
	$CimSession = New-CimSession -Authentication Kerberos -ComputerName $ServerName -Credential "$env:USERDOMAIN\" -Name "CimDnstool"
	
	$ExportCsvFolder = "D:\DNS Beheer"
	If ((Test-Path -Path "D:\DNS Beheer") -eq $false) {
		New-Item -Type Directory -Path "D:\DNS Beheer"
	}
	
	If ($CimSession) {
		
		$Msg_ChangeRecord = [System.Windows.Forms.Messagebox]::Show("You want to change DNS-record $($CheckedHostName) to: `n `n New input: $Txt_Alias `n ", "Warning", "4")
	
		If ($Msg_ChangeRecord -eq "Yes") {
			
			If ($CheckedDnsType -eq "PTR") {
				
				$oldobject = Get-DnsServerResourceRecord -computername $Servername -zonename $CheckedZoneName -name $CheckedHostName -RRType $CheckedDnsType
				$newobject = $oldobject.clone()
				$newobject.recorddata.PtrDomainname = [String]"$($Txt_Alias)"
				
				Set-DnsServerResourceRecord -NewInputObject $newobject -OldInputObject $oldobject -ZoneName $CheckedZoneName -ComputerName $Servername -PassThru -CimSession $CimSession
				
				Export-ItemsCsv -CsvPath "$ExportCsvFolder\DNS-$($CheckedHostName)-$($Date).txt"
				
				$Lst_DnsRecords.Items.Clear()
			}
			Elseif ($CheckedDnsType -eq "A") {
				
				$oldobject = Get-DnsServerResourceRecord -computername $Servername -zonename $CheckedZoneName -name $CheckedHostName -RRType $CheckedDnsType
				$newobject = $oldobject.clone()
				$newobject.recorddata.ipv4address = [ipaddress]"$($Txt_Alias)"
				
				Set-DnsServerResourceRecord -NewInputObject $newobject -OldInputObject $oldobject -ZoneName $CheckedZoneName -ComputerName $Servername -PassThru -CimSession $CimSession
				Export-ItemsCsv -CsvPath "$ExportCsvFolder\DNS-$($CheckedHostName)-$($Date).txt"
				
				$Lst_DnsRecords.Items.Clear()
			}
			Elseif (($CheckedDnsType -eq "CNAME") -or ($CheckedDnsType -eq "SRV")) {
				
				$oldobject = Get-DnsServerResourceRecord -computername $Servername -zonename $CheckedZoneName -name $CheckedHostName -RRType $CheckedDnsType 
				$newobject = $oldobject.clone()
				$newobject.recorddata.HostnameAlias = [String]"$($Txt_Alias)"
				
				Set-DnsServerResourceRecord -NewInputObject $newobject -OldInputObject $oldobject -ZoneName $CheckedZoneName -ComputerName $Servername -PassThru -CimSession $CimSession
				Export-ItemsCsv -CsvPath "$ExportCsvFolder\DNS-$($CheckedHostName)-$($Date).txt"
				
				$Lst_DnsRecords.Items.Clear()
				
			}
			Else {
				[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
				[System.Windows.Forms.MessageBox]::Show("Something is wrong with the entered value: $Txt_Alias")
				Return
			}
		}
		Else {
			Return
		}
	}
	
}

<# Adding a new DNS record #>

$Button_AddRecord_Click = {
	#TODO: Place custom script here
	
	$Hostname = $Txt_Hostname.Text
	$ZoneName = $Txt_Zone.Text
	$DnsType = $Txt_DnsType.Text
	$IpAddress = $Txt_IpAddress.Text
	$Servername = $txt_Servername.Text
	$HostnameAlias = $Txt_HostnameAlias.Text
	$UpdatePTR = $Checkbox_UpdatePTR.Checked
	
	
	
	
	
	
	$CimSession = New-CimSession -Authentication Kerberos -ComputerName $Servername -Credential "$env:USERDOMAIN\" -Name "CimDnstool"
	
	
	
	If ($DnsType -eq "A") {
		
		Add-DnsServerResourceRecordA -Name $Hostname -ZoneName $ZoneName -IPv4Address $IpAddress -CreatePtr -ComputerName $Servername -CimSession $CimSession
		
	}
	elseif ($DnsType -eq "SRV") {
		
		Add-DnsServerResourceRecordCName -Name $Hostname -ZoneName $ZoneName -HostNameAlias $HostnameAlias -ComputerName $Servername -CimSession $CimSession
	}
	
}

<# Checkbox Selections in Listview #>

$checkbox_NS_CheckedChanged = {
	#TODO: Place custom script here
	If ($checkbox_NS.Checked) {
		
		$UpdateViewNS = $script:UpdateViewArray | ? { $_.dnsType -eq "NS" } | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewNS) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewNS
	}
	elseif (!($checkbox_NS.Checked)) {
		
		$UpdateViewNS = $script:UpdateViewArray | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewNS) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewNS
	}
}

$checkbox_SRV_CheckedChanged = {
	#TODO: Place custom script here
	If ($checkbox_SRV.Checked) {
		
		$UpdateViewSRV = $script:UpdateViewArray | ? { $_.dnsType -eq "SRV" } | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewSRV) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)", "$($Ping)"
		}
		Remove-Variable UpdateViewSRV
	}
	elseif (!($checkbox_SRV.Checked)) {
		
		$UpdateViewSRV = $script:UpdateViewArray | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewSRV) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewSRV
	}
}

$checkbox_Cname_CheckedChanged = {
	#TODO: Place custom script here
	If ($checkbox_Cname.Checked) {
		
		$UpdateViewCname = $script:UpdateViewArray | ? { $_.dnsType -eq "Cname" } | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewCname) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewCname
	}
	elseif (!($checkbox_Cname.Checked)) {
		
		$UpdateViewCname = $script:UpdateViewArray | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewCname) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewCname
	}
}

$checkbox_A_CheckedChanged = {
	#TODO: Place custom script here
	If ($checkbox_A.Checked) {
		
		$UpdateViewA = $script:UpdateViewArray | ? { $_.dnsType -eq "A" } | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewA) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewA
	}
	elseif (!($checkbox_A.Checked)) {
		
		$UpdateViewA = $script:UpdateViewArray | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewA) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewA
	}
}

$checkbox_PTR_CheckedChanged = {
	#TODO: Place custom script here
	If ($checkbox_PTR.Checked) {
		
		$UpdateViewPTR = $script:UpdateViewArray | ? { $_.dnsType -eq "PTR" } | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewPTR) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewPTR
	}
	elseif (!($checkbox_PTR.Checked)) {
		
		$UpdateViewPTR = $script:UpdateViewArray | Select-Object DnsName, DnsData, DnsType, DnsZone
		$Lst_dnsrecords.Items.Clear()
		
		foreach ($Object in $UpdateViewPTR) {
			
			Add-ListViewItem -ListView $Lst_dnsrecords -Items "$($Object.DnsName)" -ImageIndex 0 -SubItems "$($Object.DnsData)", "$($Object.DnsType)", "$($Object.DnsZone)"
		}
		Remove-Variable UpdateViewPTR
	}
	
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>